extends ../exclude/layout

block continue_head
  meta(property='og:description' content='')
  meta(name='description' content='')
  meta(name='author' content='')
  meta(property='og:title' content='MusicSOL - Teacher list')
  meta(property='og:url' content='MusicSOL.net')
  meta(name='viewport' content='width=device-width, initial-scale=1, shrink-to-fit=no')
  meta(property="og:image" content="https://musicsol.net/assets/img/M-logo.png")
  title MusicSOL - Teacher list

block below-header-container
  .container.d-flex.h-100.align-items-center.overlay-carousel-text
    .mx-auto.text-center
      h1.mx-auto.my-0
        img.logo-big(src='./assets/img/logo.svg' alt='MusicSOL logo')
      h2.below-logo Teacher list
      p.scroll-down
        a.animate.js-scroll-trigger(href='#tac') More

      
  include ../exclude/carousel-mini

block content
  .gradient-overlay
  section#tac.about-section.text-white(style="padding:0 40px 0 40px;")
    #teachworks-profiles.teachworks-profiles
    script(src='https://cdn.teachworks.com/tw_website_profiles.js' type='text/javascript')
    script.
      twProfiles("U2TDDxTgAyJgVmw2eqqfKw","teachworks-profiles");
      // identify an element to observe
      const elementToObserve = document.querySelector("#teachworks-profiles");

      // create a new instance of `MutationObserver` named `observer`,
      // passing it a callback function
      const observer = new MutationObserver(function() {
        
        console.log('running the OBSERVER...................');
        let intervalID = setInterval(function(){
          if( document.querySelectorAll('.tw-photo').length > 0 ){
            clearInterval(intervalID);
            fixUI();
          }
        },100);

      });

      function fixUI(){
        console.log('running the fix.....................');
        let $twlist = $(document.querySelectorAll('#tw-listing'))
        $twlist.each(function(val){
            let $imgWrp = $('<div class="tw-img-wrapper"></div>');
            $(this).find('.tw-photo').appendTo($imgWrp);
            $(this).prepend($imgWrp);
        });
      }

      // call `observe()` on that MutationObserver instance,
      // passing it the element to observe, and the options object
      observer.observe(elementToObserve, {childList: true});

      


block continue_scripts
  script(src='js/scripts.js')
